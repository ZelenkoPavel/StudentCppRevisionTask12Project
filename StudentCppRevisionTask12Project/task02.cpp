#include "tasks.h"

/*	Task 02. The Greatest Common Divisor I [наибольший общий делитель, НОД]
*
*	Даны два натуральных числа. Необходимо найти наибольший общий делитель
*	данных чисел. Если данные некорректны, т.е. меньше единицы,
*	то должен быть возвращён ноль.
*
*	Примечание
*	1)	Наибольшим общим делителем (НОД) чисел 21 и 28 называется
*		наибольшее число, на которое 21 и 28 делятся без остатка.
*		Следовательно, это число 7.
*	2)	Для реализации эффективного алгоритма рекомендуется использовать
*		алгоритм Евклида для нахождения наибольшего общего делителя.
*
*	Формат входных данных [input]
*	На вход функция принимает два целых числа типа int.
*
*	Формат выходных данных [output]
*	Функция должна возвратить целое число, которое является решением задания.
*
*	[ input 1]: 21 28
*	[output 1]: 7
*
*	[ input 2]: 18 12
*	[output 2]: 6
*
*	[ input 3]: 24 36
*	[output 3]: 12
*
*	[ input 4]: 5 13
*	[output 4]: 1
*
*	[ input 5]: 1 1
*	[output 5]: 1
*
*	[ input 6]: -15 20
*	[output 6]: 0
*/

int task02(int a, int b) {
	if (a <= 0 || b <= 0){
		return 0;
	}

	return a * b / task01(a, b);
}